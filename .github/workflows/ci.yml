name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  ASPNETCORE_ENVIRONMENT: Development
  DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTPCLIENTHANDLER_DEFAULTIOTHREADCOUNT: 20
  CLR_OPENSSL_VERSION_OVERRIDE: 1.1
  DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 0

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      src-changed: ${{ steps.filter.outputs.src }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git-based versioning
          
      - name: Check for changes in src folder
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'src/**'
              
  success:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.src-changed != 'true' && github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: No changes in src directory
        run: echo "No changes detected in src directory. Workflow completed successfully."

  build-and-test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.src-changed == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git-based versioning
     
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip
        if: ${{ hashFiles('requirements.txt') != '' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: pip install -r requirements.txt

      - name: Install pytest
        if: ${{ hashFiles('tests/test_*.py') != '' || hashFiles('tests/**/*_test.py') != '' }}
        run: pip install pytest pytest-cov

      - name: Run Python tests
        if: ${{ hashFiles('tests/test_*.py') != '' || hashFiles('tests/**/*_test.py') != '' }}
        run: pytest src --cov=src --cov-report=xml

      - name: Upload Python coverage report
        if: ${{ hashFiles('tests/test_*.py') != '' || hashFiles('tests/**/*_test.py') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml